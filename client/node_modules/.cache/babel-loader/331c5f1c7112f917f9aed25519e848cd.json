{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/SearchForm.js\";\nimport React, { Component } from 'react';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUnitChange = e => {\n      this.setState({\n        units: e.target.value,\n        symbol: e.target.id\n      });\n    };\n\n    this.state = {\n      city: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      error: '' // this.handleChange = this.handleChange.bind(this);\n      // this.handleSubmit = this.handleSubmit.bind(this);\n\n    };\n    this.handleUnitChange = this.handleUnitChange.bind(this); // this.callAPI = this.callAPI.bind(this);\n  } // handles change in radio buttons for imperial or metric\n\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.city,\n      id: \"city\",\n      onChange: e => this.setState({\n        city: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onChange: this.handleUnitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"metric\",\n      id: \"C\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"imperial\",\n      id: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/SearchForm.js"],"names":["React","Component","SearchForm","constructor","props","handleUnitChange","e","setState","units","target","value","symbol","id","state","city","temperature","error","bind","render","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAE/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBlBC,gBAlBkB,GAkBEC,CAAD,IAAO;AACtB,WAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC,KADN;AAEVC,QAAAA,MAAM,EAAEL,CAAC,CAACG,MAAF,CAASG;AAFP,OAAd;AAIH,KAvBiB;;AAGd,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTP,MAAAA,KAAK,EAAE,QAHE;AAITG,MAAAA,MAAM,EAAE,GAJC;AAKTK,MAAAA,KAAK,EAAE,EALE,CAQb;AACA;;AATa,KAAb;AAUA,SAAKX,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBY,IAAtB,CAA2B,IAA3B,CAAxB,CAbc,CAcd;AACH,GAjB8B,CAmB/B;;;AAQAC,EAAAA,MAAM,GAAI;AACN,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,MAAA,SAAS,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,IAFtB;AAGI,MAAA,EAAE,EAAC,MAHP;AAII,MAAA,QAAQ,EAAER,CAAC,IAAI,KAAKC,QAAL,CAAc;AACzBO,QAAAA,IAAI,EAAER,CAAC,CAACG,MAAF,CAASC;AADU,OAAd,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAUI;AAAK,MAAA,QAAQ,EAAE,KAAKL,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAC,QAHV;AAII,MAAA,EAAE,EAAC,GAJP;AAKI,MAAA,cAAc,MALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AACI,MAAA,OAAO,EAAC,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ,EAWI;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,KAAK,EAAC,UAHV;AAII,MAAA,EAAE,EAAC,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAiBI;AACI,MAAA,OAAO,EAAC,YADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ,CAVJ,EA+BI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ,CADJ;AAmCH;;AA/D8B;;AAkEnC,eAAeH,UAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass SearchForm extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            city: '',            \n            temperature: '',\n            units: 'metric',\n            symbol: 'C',\n            error: ''\n        }\n\n        // this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUnitChange = this.handleUnitChange.bind(this);\n        // this.callAPI = this.callAPI.bind(this);\n    }\n\n    // handles change in radio buttons for imperial or metric\n    handleUnitChange = (e) => {\n        this.setState({\n            units: e.target.value,\n            symbol: e.target.id,\n        })\n    }\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form\">\n                <input\n                    type=\"text\"\n                    value={this.state.city}\n                    id=\"city\"\n                    onChange={e => this.setState({ \n                        city: e.target.value \n                    })}\n                />\n                \n                <div onChange={this.handleUnitChange}>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"metric\" \n                        id=\"C\"\n                        defaultChecked\n                    />\n                    <label \n                        htmlFor=\"celcius\">Celcius\n                    </label>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"imperial\" \n                        id=\"F\" \n                    />\n                    <label \n                        htmlFor=\"fahrenheit\">Fahrenheit\n                    </label>                            \n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}