{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport SunIcon from './images/sun.png';\nimport SearchForm from './SearchForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      description: '',\n      message: '',\n      error: undefined\n    };\n  } // callApi = async () => {\n  //     const response = await fetch('/weather');\n  //     const body = await response.json();\n  //     if (response.status !== 200) throw Error(body.message);\n  //     return body;\n  // };\n  // handleSubmit = async e => {\n  //     e.preventDefault();\n  //     const response = await fetch('/weather', {\n  //         method: 'POST',\n  //         headers: {\n  //             'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({ \n  //             city: this.state.city,\n  //             units: this.state.units\n  //         }),\n  //     });\n  //     const body = await response.json();\n  //     this.setState({ \n  //         city: body.city,\n  //         temperature: body.temperature,\n  //         description: body.description,\n  //         message: `The temperature in ${body.city} is ${body.temperature}°${this.state.symbol}`,\n  //      });\n  // };\n  // handles change in radio buttons for imperial or metric\n  // handleUnitChange = (e) => {\n  //     this.setState({\n  //         units: e.target.value,\n  //         symbol: e.target.id,\n  //     })\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: SunIcon,\n      alt: \"sun icon\",\n      className: \"sun\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Check the weather\"), this.state.error !== undefined && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.error), React.createElement(SearchForm, {\n      onSearchComplete: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.message))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js"],"names":["React","Component","SunIcon","SearchForm","App","constructor","props","state","city","temperature","units","symbol","description","message","error","undefined","render","handleSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAExBI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,KAAK,EAAE,QAHE;AAITC,MAAAA,MAAM,EAAE,GAJC;AAKTC,MAAAA,WAAW,EAAE,EALJ;AAMTC,MAAAA,OAAO,EAAE,EANA;AAOTC,MAAAA,KAAK,EAAEC;AAPE,KAAb;AASH,GAbuB,CAexB;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAI;AACN,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEd,OAAV;AAAmB,MAAA,GAAG,EAAC,UAAvB;AAAkC,MAAA,SAAS,EAAC,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAmBM,KAAKK,KAAL,CAAWO,KAAX,KAAqBC,SAArB,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKR,KAAL,CAAWO,KAAf,CApBT,EAuBI,oBAAC,UAAD;AACI,MAAA,gBAAgB,EAAE,KAAKG,YAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWK,WAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKL,KAAL,CAAWM,OAAf,CAFJ,CA5BJ,CADJ,CADJ;AAsCH;;AA5FuB;;AA+F5B,eAAeT,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport './App.scss';\nimport SunIcon from './images/sun.png';\nimport SearchForm from './SearchForm';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            city: '',\n            temperature: '',\n            units: 'metric',\n            symbol: 'C',\n            description: '',\n            message: '',\n            error: undefined,            \n        }        \n    }\n      \n    // callApi = async () => {\n    //     const response = await fetch('/weather');\n    //     const body = await response.json();\n    //     if (response.status !== 200) throw Error(body.message);\n        \n    //     return body;\n    // };\n      \n    // handleSubmit = async e => {\n    //     e.preventDefault();\n    //     const response = await fetch('/weather', {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json',\n    //         },\n    //         body: JSON.stringify({ \n    //             city: this.state.city,\n    //             units: this.state.units\n    //         }),\n    //     });\n       \n    //     const body = await response.json();\n    //     this.setState({ \n    //         city: body.city,\n    //         temperature: body.temperature,\n    //         description: body.description,\n    //         message: `The temperature in ${body.city} is ${body.temperature}°${this.state.symbol}`,\n    //      });\n    // };\n\n    // handles change in radio buttons for imperial or metric\n    // handleUnitChange = (e) => {\n    //     this.setState({\n    //         units: e.target.value,\n    //         symbol: e.target.id,\n    //     })\n    // }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={SunIcon} alt=\"sun icon\" className=\"sun\" />\n                    <h1 className=\"title\">Check the weather</h1>\n                    \n                    {/* the input form  */}\n                    {/* <CitySearch \n                        onSearchComplete={this.handleSearch}\n                    />\n                     */}\n                    {/* code for api call within react */}\n                    {/* if no error message exists then display the weather message */}\n                    {/* { this.state.error === undefined &&\n                        <div>\n                            <h2>{this.state.description}</h2>                    \n                            <p>{this.state.message}</p>     \n                        </div>\n                    } */}\n\n                    {/* if error exists then display it */}\n                    { this.state.error !== undefined && \n                         <p>{this.state.error}</p>\n                    }\n                    \n                    <SearchForm \n                        onSearchComplete={this.handleSubmit}\n                    />\n                    \n\n                    <div>\n                        <h2>{this.state.description}</h2>                    \n                        <p>{this.state.message}</p>     \n                    </div>\n\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}