{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport SunIcon from './images/sun.png';\nimport CitySearch from './CitySearch';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post,\n          units: this.state.units\n        })\n      });\n      const body = await response.json();\n      this.setState({\n        responseToPost: body,\n        city: body.city,\n        temperature: body.temperature,\n        description: body.description,\n        message: \"The temperature in \".concat(body.city, \" is \").concat(body.temperature, \"\\xB0\").concat(this.state.symbol)\n      });\n    };\n\n    this.handleUnitChange = e => {\n      this.setState({\n        units: e.target.value,\n        symbol: e.target.id\n      });\n    };\n\n    this.state = {\n      city: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      description: '',\n      message: '',\n      error: undefined,\n      post: ''\n    };\n  } // callApi = async () => {\n  //     const response = await fetch('/weather');\n  //     const body = await response.json();\n  //     if (response.status !== 200) throw Error(body.message);\n  //     return body;\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: SunIcon,\n      alt: \"sun icon\",\n      className: \"sun\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Check the weather\"), this.state.error !== undefined && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onChange: this.handleUnitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"metric\",\n      id: \"C\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"imperial\",\n      id: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.description), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.message))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/App.js"],"names":["React","Component","SunIcon","CitySearch","App","constructor","props","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","post","state","units","json","setState","responseToPost","city","temperature","description","message","symbol","handleUnitChange","target","value","id","error","undefined","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.scss';\nimport SunIcon from './images/sun.png';\nimport CitySearch from './CitySearch';\n\nclass App extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            city: '',\n            temperature: '',\n            units: 'metric',\n            symbol: 'C',\n            description: '',\n            message: '',\n            error: undefined,\n            post: ''\n        }        \n        \n    }\n      \n    // callApi = async () => {\n    //     const response = await fetch('/weather');\n    //     const body = await response.json();\n    //     if (response.status !== 200) throw Error(body.message);\n        \n    //     return body;\n    // };\n      \n    handleSubmit = async e => {\n        e.preventDefault();\n        const response = await fetch('/weather', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \n                post: this.state.post,\n                units: this.state.units\n            }),\n        });\n       \n        const body = await response.json();\n        this.setState({ \n            responseToPost: body,\n            city: body.city,\n            temperature: body.temperature,\n            description: body.description,\n            message: `The temperature in ${body.city} is ${body.temperature}Â°${this.state.symbol}`,\n         });\n    };\n\n    // handles change in radio buttons for imperial or metric\n    handleUnitChange = (e) => {\n        this.setState({\n            units: e.target.value,\n            symbol: e.target.id,\n        })\n    }\n\n    render () {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={SunIcon} alt=\"sun icon\" className=\"sun\" />\n                    <h1 className=\"title\">Check the weather</h1>\n                    \n                    {/* the input form  */}\n                    {/* <CitySearch \n                        onSearchComplete={this.handleSearch}\n                    />\n                     */}\n                    {/* code for api call within react */}\n                    {/* if no error message exists then display the weather message */}\n                    {/* { this.state.error === undefined &&\n                        <div>\n                            <h2>{this.state.description}</h2>                    \n                            <p>{this.state.message}</p>     \n                        </div>\n                    } */}\n\n                    {/* if error exists then display it */}\n                    { this.state.error !== undefined && \n                         <p>{this.state.error}</p>\n                    }\n\n                    <p>{this.state.response}</p>\n\n                    <form onSubmit={this.handleSubmit} className=\"form\">\n                        <input\n                            type=\"text\"\n                            value={this.state.post}\n                            onChange={e => this.setState({ \n                                post: e.target.value \n                            })}\n                        />\n                        \n                        <div onChange={this.handleUnitChange}>\n                            <input \n                                type=\"radio\" \n                                name=\"units\" \n                                value=\"metric\" \n                                id=\"C\"\n                                defaultChecked\n                            />\n                            <label \n                                htmlFor=\"celcius\">Celcius\n                            </label>\n                            <input \n                                type=\"radio\" \n                                name=\"units\" \n                                value=\"imperial\" \n                                id=\"F\" \n                            />\n                            <label \n                                htmlFor=\"fahrenheit\">Fahrenheit\n                            </label>                            \n                        </div>\n                        <button type=\"submit\">Submit</button>\n                    </form>\n\n                    <div>\n                        <h2>{this.state.description}</h2>                    \n                        <p>{this.state.message}</p>     \n                    </div>\n\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}