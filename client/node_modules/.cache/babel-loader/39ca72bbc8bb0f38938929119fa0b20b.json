{"ast":null,"code":"var _jsxFileName = \"/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/SearchForm.js\";\nimport React, { Component } from 'react';\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUnitChange = e => {\n      this.setState({\n        units: e.target.value,\n        symbol: e.target.id\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/weather', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          city: this.state.city,\n          units: this.state.units\n        })\n      });\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      this.setState({\n        city: body.city,\n        temperature: body.temperature,\n        description: body.description,\n        message: \"The temperature in \".concat(body.city, \" is \").concat(body.temperature, \"\\xB0\").concat(this.state.symbol),\n        error: body.error\n      });\n      this.props.onSearchComplete(this.state.city, this.state.temperature, this.state.units, this.state.symbol, this.state.description, this.state.error);\n    };\n\n    this.state = {\n      city: '',\n      temperature: '',\n      units: 'metric',\n      symbol: 'C',\n      error: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleUnitChange = this.handleUnitChange.bind(this);\n  } // handles change in input box\n\n\n  handleChange(e) {\n    this.setState({\n      city: e.target.value\n    });\n  } // handles change in radio buttons for imperial or metric\n\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      value: this.state.city,\n      id: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      onChange: this.handleUnitChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"metric\",\n      id: \"C\",\n      defaultChecked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"celcius\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Celcius\"), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"units\",\n      value: \"imperial\",\n      id: \"F\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"fahrenheit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Fahrenheit\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default SearchForm;","map":{"version":3,"sources":["/Users/Zoe/Documents/BCIT2019/get-weather-app/client/src/SearchForm.js"],"names":["React","Component","SearchForm","constructor","props","handleUnitChange","e","setState","units","target","value","symbol","id","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","city","state","json","status","Error","message","temperature","description","error","onSearchComplete","handleChange","bind","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nclass SearchForm extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            city: '',            \n            temperature: '',\n            units: 'metric',\n            symbol: 'C',\n            error: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleUnitChange = this.handleUnitChange.bind(this);\n    }\n\n    // handles change in input box\n    handleChange(e) {\n        this.setState({ \n          city: e.target.value\n        });\n    }\n\n    // handles change in radio buttons for imperial or metric\n    handleUnitChange = (e) => {\n        this.setState({\n            units: e.target.value,\n            symbol: e.target.id,\n        })\n    }\n\n    // handles form submission\n    handleSubmit = async e => {\n        e.preventDefault();\n        const response = await fetch('/weather', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ \n                city: this.state.city,\n                units: this.state.units\n            }),\n        });\n       \n        const body = await response.json();\n\n        if (response.status !== 200) throw Error(body.message);\n        \n        this.setState({ \n            city: body.city,\n            temperature: body.temperature,\n            description: body.description,\n            message: `The temperature in ${body.city} is ${body.temperature}Â°${this.state.symbol}`,\n            error: body.error\n        });\n\n        this.props.onSearchComplete(this.state.city, this.state.temperature, this.state.units, this.state.symbol, this.state.description, this.state.error);\n    };\n\n    render () {\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form\">\n                <input\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    value={this.state.city}\n                    id=\"city\"                   \n                />\n                \n                <div onChange={this.handleUnitChange}>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"metric\" \n                        id=\"C\"\n                        defaultChecked\n                    />\n                    <label \n                        htmlFor=\"celcius\">Celcius\n                    </label>\n                    <input \n                        type=\"radio\" \n                        name=\"units\" \n                        value=\"imperial\" \n                        id=\"F\" \n                    />\n                    <label \n                        htmlFor=\"fahrenheit\">Fahrenheit\n                    </label>                            \n                </div>\n                <button type=\"submit\">Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default SearchForm;"]},"metadata":{},"sourceType":"module"}